name: Deploy to GitHub Pages

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
  pull_request_target:
    types: [closed]

permissions:
  contents: write
  pull-requests: write

jobs:
  # Deploy production site from master branch
  deploy-production:
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build application
        env:
          PUBLIC_PATH: /onlinerecipes/
        run: npx nx build onlinerecipes --configuration=production

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist/onlinerecipes
          destination_dir: .
          keep_files: false
          user_name: "github-actions[bot]"
          user_email: "github-actions[bot]@users.noreply.github.com"
          commit_message: "Deploy production site from ${{ github.sha }}"

  # Deploy PR preview
  deploy-preview:
    if: github.event_name == 'pull_request' && github.event.action != 'closed'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build application with PR base path
        env:
          PUBLIC_PATH: /onlinerecipes/pr-${{ github.event.pull_request.number }}/
        run: npx nx build onlinerecipes --configuration=production

      - name: Deploy PR preview to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist/onlinerecipes
          destination_dir: pr-${{ github.event.pull_request.number }}
          keep_files: true
          user_name: "github-actions[bot]"
          user_email: "github-actions[bot]@users.noreply.github.com"
          commit_message: "Deploy preview for PR #${{ github.event.pull_request.number }}"

      - name: Comment PR with preview URL
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const repoName = context.repo.repo;
            const repoOwner = context.repo.owner;
            const previewUrl = `https://${repoOwner}.github.io/${repoName}/pr-${prNumber}/`;

            const comment = `## üöÄ Preview Deployment

            Your PR preview is ready! 

            **Preview URL:** ${previewUrl}

            This preview will be automatically updated when you push new commits to this PR.
            It will be deleted when the PR is closed or merged.`;

            // Find existing comment
            const { data: comments } = await github.rest.issues.listComments({
              owner: repoOwner,
              repo: repoName,
              issue_number: prNumber,
            });

            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('Preview Deployment')
            );

            if (botComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: repoOwner,
                repo: repoName,
                comment_id: botComment.id,
                body: comment
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: repoOwner,
                repo: repoName,
                issue_number: prNumber,
                body: comment
              });
            }

  # Cleanup PR preview when PR is closed
  cleanup-preview:
    if: github.event_name == 'pull_request_target' && github.event.action == 'closed'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          fetch-depth: 0

      - name: Remove PR preview directory
        run: |
          PR_DIR="pr-${{ github.event.pull_request.number }}"
          if [ -d "$PR_DIR" ]; then
            git config user.name 'github-actions[bot]'
            git config user.email 'github-actions[bot]@users.noreply.github.com'
            git rm -rf "$PR_DIR"
            git commit -m "Remove preview for closed PR #${{ github.event.pull_request.number }}"
            git push
            echo "‚úÖ Removed preview directory: $PR_DIR"
          else
            echo "‚ÑπÔ∏è Preview directory not found: $PR_DIR"
          fi

      - name: Comment PR about cleanup
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const repoOwner = context.repo.owner;
            const repoName = context.repo.repo;

            await github.rest.issues.createComment({
              owner: repoOwner,
              repo: repoName,
              issue_number: prNumber,
              body: 'üßπ PR preview has been cleaned up from GitHub Pages.'
            });
